const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('create_ticket_channels')
    .setDescription('ุฅุนุฏุงุฏ ูุธุงู ุฅุฏุงุฑุฉ ุงูุชุฐุงูุฑ'),
  async execute(interaction) {
    // ุงูุชุญูู ูู ุตูุงุญูุงุช ุงูุจูุช
    if (!interaction.guild.members.me.permissions.has(['ManageChannels', 'ManageRoles'])) {
      return interaction.reply({
        content: 'ุงูุจูุช ูุญุชุงุฌ ุฅูู ุตูุงุญูุงุช ุฅุฏุงุฑุฉ ุงููููุงุช ูุงูุฃุฏูุงุฑ!',
        ephemeral: true
      });
    }

    if (!interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
      return interaction.reply({
        content: 'ูุฐุง ุงูุฃูุฑ ูุชุงุญ ูููุดุฑููู ููุท!',
        ephemeral: true
      });
    }

    const guild = interaction.guild;
    let logChannel, requestChannel, ticketCategory;

    try {
      // ุงูุชุญูู ูู ุนุฏู ูุฌูุฏ ุงููููุงุช ูุงููุงุชุงุฌูุฑู ูุณุจูุงู
      const existingCategory = guild.channels.cache.find(c => c.type === 4 && c.name === '๐ซ ูุธุงู ุงูุชุฐุงูุฑ');
      const existingLogChannel = guild.channels.cache.find(c => c.name === 'ุณุฌู-ุงูุชุฐุงูุฑ');
      const existingRequestChannel = guild.channels.cache.find(c => c.name === 'ุทูุจ-ุชุฐูุฑุฉ');

      if (existingCategory || existingLogChannel || existingRequestChannel) {
        return interaction.reply({
          content: 'ูุธุงู ุงูุชุฐุงูุฑ ููุฌูุฏ ุจุงููุนู ูู ูุฐุง ุงูุณูุฑูุฑ!',
          ephemeral: true
        });
      }

      // ุฅูุดุงุก ุงููุงุชุงุฌูุฑู
      ticketCategory = await guild.channels.create({
        name: '๐ซ ูุธุงู ุงูุชุฐุงูุฑ',
        type: 4, // CategoryChannel
        permissionOverwrites: [
          {
            id: guild.id,
            allow: ['ViewChannel'],
            deny: ['SendMessages']
          },
          {
            id: interaction.client.user.id,
            allow: ['ViewChannel', 'SendMessages', 'ManageChannels']
          }
        ]
      });

      // ุฅูุดุงุก ููุงุฉ ุงูุณุฌูุงุช
      logChannel = await guild.channels.create({
        name: 'ุณุฌู-ุงูุชุฐุงูุฑ',
        type: 0,
        parent: ticketCategory.id,
        permissionOverwrites: [
          {
            id: guild.id,
            deny: ['ViewChannel', 'SendMessages'],
          },
          {
            id: interaction.client.user.id,
            allow: ['ViewChannel', 'SendMessages'],
          },
          {
            id: interaction.guild.roles.cache.find(r => r.permissions.has(PermissionFlagsBits.Administrator))?.id,
            allow: ['ViewChannel'],
            deny: ['SendMessages'],
          }
        ].filter(Boolean)
      });

      // ุฅูุดุงุก ููุงุฉ ุทูุจ ุงูุชุฐุงูุฑ
      requestChannel = await guild.channels.create({
        name: 'ุทูุจ-ุชุฐูุฑุฉ',
        type: 0,
        parent: ticketCategory.id,
        permissionOverwrites: [
          {
            id: guild.id,
            allow: ['ViewChannel'],
            deny: ['SendMessages'],
          },
          {
            id: interaction.client.user.id,
            allow: ['ViewChannel', 'SendMessages'],
          },
          {
            id: interaction.guild.roles.cache.find(r => r.permissions.has(PermissionFlagsBits.Administrator))?.id,
            allow: ['ViewChannel'],
            deny: ['SendMessages'],
          }
        ].filter(Boolean)
      });

      // ุฅุฑุณุงู ุฑุณุงูุฉ ูุน ุฒุฑ ุงูุชูุงุนู
      await requestChannel.send({
        embeds: [{
          title: '๐ซ ูุธุงู ุงูุชุฐุงูุฑ',
          description: 'ููุญุตูู ุนูู ูุณุงุนุฏุฉ ุฃู ููุชูุงุตู ูุน ุงูุฅุฏุงุฑุฉุ ุงุถุบุท ุนูู ุงูุฒุฑ ุฃุฏูุงู ูุฅูุดุงุก ุชุฐูุฑุฉ ุฌุฏูุฏุฉ.',
          fields: [
            {
              name: '๐ ููุงุญุธุงุช',
              value: 'โข ููููู ุฅูุดุงุก 3 ุชุฐุงูุฑ ูุญุฏ ุฃูุตู ูู ุงูููู\n' +
                     'โข ููููู ูุชุญ ุชุฐูุฑุฉ ูุงุญุฏุฉ ููุท ูู ููุณ ุงูููุช\n' +
                     'โข ูุชู ุฅุบูุงู ุงูุชุฐูุฑุฉ ุชููุงุฆูุงู ุจุนุฏ 24 ุณุงุนุฉ'
            }
          ],
          color: 0x2b2d31
        }],
        components: [{
          type: 1,
          components: [{
            type: 2,
            style: 1,
            label: 'ุฅูุดุงุก ุชุฐูุฑุฉ',
            emoji: '๐ซ',
            custom_id: 'create_ticket'
          }]
        }]
      });

      await interaction.reply({ 
        embeds: [{
          title: 'โ ุชู ุฅุนุฏุงุฏ ูุธุงู ุงูุชุฐุงูุฑ',
          description: `ุชู ุฅูุดุงุก:\n` +
                      `โข ูุงุชุงุฌูุฑู ${ticketCategory}\n` +
                      `โข ููุงุฉ ${requestChannel}\n` +
                      `โข ููุงุฉ ${logChannel}`,
          color: 0x00ff00
        }],
        ephemeral: true 
      });

    } catch (error) {
      console.error('ุฎุทุฃ ูู ุฅูุดุงุก ูุธุงู ุงูุชุฐุงูุฑ:', error);
      // ูุญุงููุฉ ุชูุธูู ุงููููุงุช ุงูุชู ุชู ุฅูุดุงุคูุง ูู ุญุงูุฉ ุญุฏูุซ ุฎุทุฃ
      if (logChannel) await logChannel.delete().catch(console.error);
      if (requestChannel) await requestChannel.delete().catch(console.error);
      if (ticketCategory) await ticketCategory.delete().catch(console.error);
      
      await interaction.reply({
        content: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุนุฏุงุฏ ูุธุงู ุงูุชุฐุงูุฑ',
        ephemeral: true
      });
    }
  }
}; 